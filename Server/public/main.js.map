{"version":3,"sources":["./src/app/components/account/account.component.ts","./src/app/components/account/account.component.html","./src/app/components/dropmenu/dropmenu.component.ts","./src/app/components/dropmenu/dropmenu.component.html","./src/environments/environment.ts","./src/app/services/api.service.ts","./src/app/services/guard.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/validators/CustomValidator.ts","./src/app/models/AuthorizationModel.ts","./src/app/services/auth.service.ts","./src/app/components/game/game.component.ts","./src/app/components/game/game.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { ApiService } from '../../services/api.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { CustomValidator } from 'src/app/validators/CustomValidator';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.css']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  formNewUsername: FormGroup;\r\n  formNewPassword: FormGroup;\r\n  formDelete: FormGroup;\r\n  username: string;\r\n  errorNewUsername: boolean;\r\n  errorNewPassword: boolean;\r\n  errorDelete: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder, \r\n    private api: ApiService, \r\n    private auth: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.formNewUsername = this.formBuilder.group({\r\n      newUsername: ['', [\r\n        Validators.required,\r\n        Validators.minLength(4)\r\n      ], [\r\n        CustomValidator.usernameAvailable(this.api)\r\n      ]],\r\n      password: ['', [\r\n        Validators.required,\r\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/)\r\n      ]]\r\n    });\r\n\r\n    this.formNewPassword = this.formBuilder.group({\r\n      password: ['', [\r\n        Validators.required,\r\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/)\r\n      ]],\r\n      newPassword: ['', [\r\n        Validators.required,\r\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/)\r\n      ]],\r\n      newPasswordRetype: ['', [\r\n        Validators.required,\r\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/)\r\n      ]]\r\n    });\r\n\r\n    this.newPasswordRetype.setValidators([CustomValidator.match(this.newPassword)]);\r\n\r\n    this.formDelete = this.formBuilder.group({\r\n      password: ['', [\r\n        Validators.required,\r\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/)\r\n      ]]\r\n    });\r\n\r\n    this.setUsername();\r\n  }\r\n\r\n  async setUsername() {\r\n    let user = await this.api.getUser();\r\n    this.username = user.username;\r\n  }\r\n  \r\n  get newUsername() { return this.formNewUsername.get('newUsername') as AbstractControl; }\r\n  get newPassword() { return this.formNewPassword.get('newPassword') as AbstractControl; }\r\n  get newPasswordRetype() { return this.formNewPassword.get('newPasswordRetype') as AbstractControl; }\r\n\r\n  get passwordForNewUsername() { return this.formNewUsername.get('password') as AbstractControl; }\r\n  get passwordForNewPassword() { return this.formNewPassword.get('password') as AbstractControl; }\r\n  get passwordForDelete() { return this.formDelete.get('password') as AbstractControl; }\r\n\r\n  private async validPassword(password: string): Promise<boolean> {\r\n    try {\r\n      let user = await this.api.getUser();\r\n      let hash = await this.api.encrypt({string: password, salt: user.password_salt});\r\n\r\n      return hash.cypher === user.password;\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async relogin(email: string, password: string) {\r\n    let auth = await this.api.login(email, password);\r\n    this.auth.setAuthentication(auth);\r\n  }\r\n\r\n  private refresh() {\r\n    this.router.navigateByUrl('/refresh', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([decodeURI(this.location.path())]);\r\n    });\r\n  }\r\n\r\n  async onSubmitNewUsername() {\r\n    let validPassword = await this.validPassword(this.passwordForNewUsername.value);\r\n    if (!validPassword) {\r\n      this.errorNewUsername = true;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let user = await this.api.getUser();\r\n      let updated = await this.api.updateUser({newUsername: this.newUsername.value});\r\n\r\n      if (!updated.error) {\r\n        this.relogin(user.email_address, this.passwordForNewUsername.value);\r\n        this.refresh();\r\n      } else {\r\n        this.errorNewUsername = true;\r\n      }\r\n    } catch(e) {\r\n      this.errorNewUsername = true;\r\n    }\r\n  }\r\n\r\n  async onSubmitNewPassword() {\r\n    let validPassword = await this.validPassword(this.passwordForNewPassword.value);\r\n    if (!validPassword) {\r\n      this.errorNewPassword = true;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let user = await this.api.getUser();\r\n      let updated = await this.api.updateUser({newPassword: this.newPassword.value});\r\n      \r\n      if (!updated.error) {\r\n        this.relogin(user.email_address, this.newPassword.value);\r\n        this.refresh();\r\n      } else {\r\n        this.errorNewPassword = true;\r\n      }\r\n    } catch(e) {\r\n      this.errorNewPassword = true;\r\n    }\r\n  }\r\n\r\n  async onSubmitDelete() {\r\n    let validPassword = await this.validPassword(this.passwordForDelete.value);\r\n    if (!validPassword) {\r\n      this.errorDelete = true;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let deleted = await this.api.deleteUser();\r\n      \r\n      if (!deleted.error) {\r\n        this.auth.clearAuthentication();\r\n        this.router.navigate(['/']);\r\n      } else {\r\n        this.errorDelete = true;\r\n      }\r\n    } catch(e) {\r\n      this.errorDelete = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<app-dropmenu></app-dropmenu>\r\n<header>\r\n    <h1>2D Fighting Multiplayer Platformer</h1>\r\n</header>\r\n<section>\r\n    <h2>Account - {{username}}</h2>\r\n    <hr>\r\n    <form [formGroup]=\"formNewUsername\" autocomplete=\"off\">\r\n        <p class=\"error\" *ngIf=\"errorNewUsername\">Update failed.</p>\r\n        \r\n        <input type=\"text\" id=\"newUsername\" placeholder=\"New username...\" formControlName=\"newUsername\">\r\n        <p class=\"error\" *ngIf=\"newUsername.invalid && newUsername?.dirty && newUsername.errors?.minlength\">Username must contain at least 4 characters long.</p>\r\n        <p class=\"error\" *ngIf=\"newUsername.invalid && newUsername?.dirty && newUsername.errors?.usernameAvailable\">Username already taken.</p>\r\n\r\n        <input type=\"password\" id=\"newUsernamePassword\" placeholder=\"Password...\" formControlName=\"password\">\r\n        <p class=\"error\" *ngIf=\"passwordForNewUsername.invalid && passwordForNewUsername?.dirty\">Password must contain 1 lowercase, 1 uppercase, 1 number and be at least 8 characters long.</p>\r\n\r\n        <input type=\"button\" value=\"Update Username\" [disabled]=\"formNewUsername.invalid\" (click)=\"onSubmitNewUsername()\">\r\n    </form>\r\n    <hr>\r\n    <form [formGroup]=\"formNewPassword\" autocomplete=\"off\">\r\n        <p class=\"error\" *ngIf=\"errorNewPassword\">Update failed.</p>\r\n\r\n        <input type=\"password\" id=\"newPassword\" autocomplete=\"new-password\" placeholder=\"New password...\" formControlName=\"newPassword\">\r\n        <p class=\"error\" *ngIf=\"newPassword.invalid && newPassword?.dirty\">Password must contain 1 lowercase, 1 uppercase, 1 number and be at least 8 characters long.</p>\r\n        \r\n        <input type=\"password\" id=\"newPasswordRetype\" placeholder=\"Retype new password...\" formControlName=\"newPasswordRetype\">\r\n        <p class=\"error\" *ngIf=\"newPasswordRetype.invalid && newPasswordRetype?.dirty\">Does not match.</p>\r\n\r\n        <input type=\"password\" id=\"newPasswordPassword\" placeholder=\"Password...\" formControlName=\"password\">\r\n        <p class=\"error\" *ngIf=\"passwordForNewPassword.invalid && passwordForNewPassword?.dirty\">Password must contain 1 lowercase, 1 uppercase, 1 number and be at least 8 characters long.</p>\r\n\r\n        <input type=\"button\" value=\"Update Password\" [disabled]=\"formNewPassword.invalid\" (click)=\"onSubmitNewPassword()\">\r\n    </form>\r\n    <hr>\r\n    <form [formGroup]=\"formDelete\" autocomplete=\"off\">\r\n        <p class=\"error\" *ngIf=\"errorDelete\">Delete failed.</p>\r\n\r\n        <input type=\"password\" id=\"deletePassword\" placeholder=\"Password...\" formControlName=\"password\">\r\n        <p class=\"error\" *ngIf=\"passwordForDelete.invalid && passwordForDelete?.dirty\">Password must contain 1 lowercase, 1 uppercase, 1 number and be at least 8 characters long.</p>\r\n\r\n        <input type=\"button\" value=\"Delete Account\" [disabled]=\"formDelete.invalid\" (click)=\"onSubmitDelete()\">\r\n    </form>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { faBars, faPlay, faUser, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-dropmenu',\r\n  templateUrl: './dropmenu.component.html',\r\n  styleUrls: ['./dropmenu.component.css']\r\n})\r\nexport class DropmenuComponent implements OnInit {\r\n  faBars = faBars;\r\n  faPlay = faPlay;\r\n  faUser = faUser;\r\n  faSignOutAlt = faSignOutAlt;\r\n  isActive:Boolean = false;\r\n\r\n  constructor(private router: Router, private auth:AuthService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  setActive() {\r\n    let active = {\r\n      'is-active': this.isActive\r\n    }\r\n\r\n    return active;\r\n  }\r\n\r\n  onToggle() {\r\n    this.isActive = !this.isActive;\r\n  }\r\n\r\n  onClickLogout() {\r\n    this.auth.clearAuthentication();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n","<aside [ngClass]=\"setActive()\">\r\n    <nav>\r\n        <button routerLink=\"/game\"><fa-icon [icon]=\"faPlay\"></fa-icon>Play Game</button>\r\n        <button routerLink=\"/account\"><fa-icon [icon]=\"faUser\"></fa-icon>My Account</button>\r\n        <button (click)=\"onClickLogout()\"><fa-icon [icon]=\"faSignOutAlt\"></fa-icon>Logout</button>\r\n    </nav>\r\n    <button (click)=\"onToggle()\"><fa-icon [icon]=\"faBars\"></fa-icon></button>\r\n</aside>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nimport { UserModel } from '../models/UserModel';\r\nimport { UserCreatedModel } from '../models/UserCreatedModel';\r\nimport { UserUpdatedModel } from '../models/UserUpdatedModel';\r\nimport { UserDeletedModel } from '../models/UserDeletedModel';\r\nimport { UserUpdateModel } from '../models/UserUpdateModel';\r\nimport { AuthorizationModel } from '../models/AuthorizationModel';\r\nimport { HashModel } from '../models/HashModel';\r\nimport { HashCreateModel } from '../models/HashCreateModel';\r\nimport { AvailableModel } from '../models/AvailableModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  host:string = `${window.location.origin}`;\r\n  tokenRoute:string = '/api/token';\r\n  userRoute:string = '/api/user';\r\n  availableRoute:string = '/api/user/available';\r\n  encryptRoute:string = '/api/encrypt/';\r\n\r\n  constructor(\r\n    private http: HttpClient, \r\n    private jwtHelper: JwtHelperService, \r\n    private auth:AuthService\r\n  ) {}\r\n\r\n  login(emailAddress:string, password:string):Promise<AuthorizationModel> {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    let body = {\r\n      email_address: emailAddress,\r\n      password: password\r\n    }\r\n\r\n    return this.http.post<AuthorizationModel>(`${this.host}${this.tokenRoute}`, body, { headers }).toPromise();\r\n  }\r\n\r\n  createUser(emailAddress:string, username:string, password:string):Promise<UserCreatedModel> {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    let body = {\r\n      email_address: emailAddress,\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    return this.http.post<UserCreatedModel>(`${this.host}${this.userRoute}`, body, { headers }).toPromise();\r\n  }\r\n\r\n  updateUser(userUpdateModel: UserUpdateModel):Promise<UserUpdatedModel> {\r\n    let authorization = this.auth.getAuthentication();\r\n\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${authorization.token}`\r\n    });\r\n\r\n    let username = this.jwtHelper.decodeToken(authorization.token).username;\r\n\r\n    return this.http.patch<UserUpdatedModel>(`${this.host}${this.userRoute}/${username}`, userUpdateModel, { headers }).toPromise();\r\n  }\r\n\r\n  deleteUser():Promise<UserDeletedModel> {\r\n    let authorization = this.auth.getAuthentication();\r\n\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${authorization.token}`\r\n    });\r\n\r\n    let username = this.jwtHelper.decodeToken(authorization.token).username;\r\n\r\n    return this.http.delete<UserDeletedModel>(`${this.host}${this.userRoute}/${username}`, { headers }).toPromise();\r\n  }\r\n\r\n  getUser():Promise<UserModel> {\r\n    let authorization = this.auth.getAuthentication();\r\n\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${authorization.token}`\r\n    });\r\n\r\n    let username = this.jwtHelper.decodeToken(authorization.token).username;\r\n\r\n    return this.http.get<UserModel>(`${this.host}${this.userRoute}/${username}`, { headers }).toPromise();\r\n  }\r\n\r\n  emailAvailable(emailAddress: string):Promise<AvailableModel> {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    let body = {\r\n      email_address: emailAddress,\r\n    }\r\n\r\n    return this.http.post<AvailableModel>(`${this.host}${this.availableRoute}`, body, { headers }).toPromise();\r\n  }\r\n\r\n  usernameAvailable(username: string):Promise<AvailableModel> {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    let body = {\r\n      username: username,\r\n    }\r\n\r\n    return this.http.post<AvailableModel>(`${this.host}${this.availableRoute}`, body, { headers }).toPromise();\r\n  }\r\n\r\n  encrypt(hashCreateModel:HashCreateModel):Promise<HashModel> {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    return this.http.post<HashModel>(`${this.host}${this.encryptRoute}`, hashCreateModel, { headers }).toPromise();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GuardService implements CanActivate {\r\n\r\n  constructor(private auth:AuthService, private router:Router) { }\r\n\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n        this.router.navigate(['/']);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {}","<main>\r\n    <router-outlet></router-outlet>\r\n</main>","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ApiService } from '../../services/api.service';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n  error: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router, \r\n    private formBuilder: FormBuilder, \r\n    private api: ApiService, \r\n    private auth: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      email: ['', [\r\n        Validators.required,\r\n        Validators.email\r\n      ]],\r\n      password: ['', [\r\n        Validators.required,\r\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/)\r\n      ]]\r\n    });\r\n\r\n    if (this.auth.isAuthenticated()) {\r\n      this.router.navigate(['/game']);\r\n    }\r\n  }\r\n\r\n  get email() { return this.form.get('email') as AbstractControl; }\r\n  get password() { return this.form.get('password') as AbstractControl; }\r\n\r\n  async onSubmit() {\r\n    try {\r\n      let auth = await this.api.login(this.email.value, this.password.value);\r\n\r\n      this.auth.setAuthentication(auth);\r\n      this.router.navigate(['/game']);\r\n    } catch(e) {\r\n      this.error = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<header>\r\n    <h1>2D Fighting Multiplayer Platformer</h1>\r\n</header>\r\n<section>\r\n    <h2>Login</h2>\r\n    <hr>\r\n    <form [formGroup]=\"form\">\r\n        <p class=\"error\" *ngIf=\"error\">Login failed.</p>\r\n        \r\n        <input type=\"email\" id=\"loginEmail\" autocomplete=\"email\" placeholder=\"Email...\" formControlName=\"email\">\r\n        <p class=\"error\" *ngIf=\"email.invalid && email?.dirty\">Email is not valid.</p>\r\n\r\n        <input type=\"password\" id=\"loginPassword\" autocomplete=\"current-password\" placeholder=\"Password...\" formControlName=\"password\">\r\n        <p class=\"error\" *ngIf=\"password.invalid && password?.dirty\">Password must contain 1 lowercase, 1 uppercase, 1 number and be at least 8 characters long.</p>\r\n\r\n        <input type=\"submit\" value=\"Login\" [disabled]=\"form.invalid\" (click)=\"onSubmit()\">\r\n    </form>\r\n    <hr>\r\n    <form>\r\n        <input type=\"button\" value=\"Register\" routerLink=\"/register\">\r\n    </form>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ApiService } from '../../services/api.service';\r\nimport { CustomValidator } from '../../validators/CustomValidator';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: FormGroup;\r\n  error: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router, \r\n    private formBuilder: FormBuilder, \r\n    private api: ApiService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      email: ['', [\r\n        Validators.required,\r\n        Validators.email\r\n      ], [\r\n        CustomValidator.emailAvailable(this.api)\r\n      ]],\r\n      username: ['', [\r\n        Validators.required,\r\n        Validators.minLength(4)\r\n      ], [\r\n        CustomValidator.usernameAvailable(this.api)\r\n      ]],\r\n      password: ['', [\r\n        Validators.required,\r\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/)\r\n      ]],\r\n      passwordRetype: ['', [\r\n        Validators.required\r\n      ]]\r\n    });\r\n\r\n    this.passwordRetype.setValidators([CustomValidator.match(this.password)]);\r\n  }\r\n\r\n  get email() { return this.form.get('email') as AbstractControl; }\r\n  get username() { return this.form.get('username') as AbstractControl; }\r\n  get password() { return this.form.get('password') as AbstractControl; }\r\n  get passwordRetype() { return this.form.get('passwordRetype') as AbstractControl; }\r\n\r\n  async onSubmit() {\r\n    try {\r\n      let created = await this.api.createUser(this.email.value, this.username.value, this.password.value);\r\n      \r\n      if (created.error) this.error = true;\r\n      else this.router.navigate(['/']);\r\n    } catch(e) {\r\n      this.error = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<header>\r\n    <h1>2D Fighting Multiplayer Platformer</h1>\r\n</header>\r\n<section>\r\n    <h2>Register</h2>\r\n    <hr>\r\n    <form [formGroup]=\"form\" autocomplete=\"off\">\r\n        <p class=\"error\" *ngIf=\"error\">Creation failed.</p>\r\n\r\n        <input type=\"email\" id=\"createEmail\" placeholder=\"Email...\" formControlName=\"email\">\r\n        <p class=\"error\" *ngIf=\"email.invalid && email?.dirty && email.errors?.email\">Email is not valid.</p>\r\n        <p class=\"error\" *ngIf=\"email.invalid && email?.dirty && email.errors?.emailAvailable\">Email already in use.</p>\r\n\r\n        <input type=\"text\" id=\"createUsername\" placeholder=\"Username...\" formControlName=\"username\">\r\n        <p class=\"error\" *ngIf=\"username.invalid && username?.dirty && username.errors?.minlength\">Username must contain at least 4 characters long.</p>\r\n        <p class=\"error\" *ngIf=\"username.invalid && username?.dirty && username.errors?.usernameAvailable\">Username already taken.</p>\r\n\r\n        <input type=\"password\" id=\"createPassword\" autocomplete=\"new-password\" placeholder=\"Password...\" formControlName=\"password\">\r\n        <p class=\"error\" *ngIf=\"password.invalid && password?.dirty\">Password must contain 1 lowercase, 1 uppercase, 1 number and be at least 8 characters long.</p>\r\n\r\n        <input type=\"password\" id=\"createPasswordRetype\" placeholder=\"Retype password...\" formControlName=\"passwordRetype\">\r\n        <p class=\"error\" *ngIf=\"passwordRetype.invalid && passwordRetype?.dirty\">Does not match.</p>\r\n\r\n        <input type=\"button\" value=\"Create Account\" [disabled]=\"form.invalid\" (click)=\"onSubmit()\">\r\n    </form>\r\n    <hr>\r\n    <form>\r\n        <input type=\"button\" value=\"Cancel\" routerLink=\"/\">\r\n    </form>\r\n</section>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JwtModule } from \"@auth0/angular-jwt\";\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AccountComponent } from './components/account/account.component';\r\nimport { DropmenuComponent } from './components/dropmenu/dropmenu.component';\r\nimport { GameComponent } from './components/game/game.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    AccountComponent,\r\n    DropmenuComponent,\r\n    GameComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    FontAwesomeModule,\r\n    HttpClientModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: () => localStorage.getItem(\"token\"),\r\n        allowedDomains: [window.location.host]\r\n      },\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { AbstractControl, AsyncValidatorFn, ValidatorFn } from \"@angular/forms\";\r\n\r\nimport { ApiService } from '../services/api.service';\r\n\r\nexport class CustomValidator {\r\n    static match(field: AbstractControl): ValidatorFn {\r\n        return (control: AbstractControl): {[key: string]: boolean} | null => {\r\n            return field.value !== control.value? {match: true } : null;\r\n        }\r\n    }\r\n\r\n    static emailAvailable(api: ApiService): AsyncValidatorFn {\r\n        return async (control: AbstractControl): Promise<{[key: string]: boolean} | null> => {\r\n            let available = await api.emailAvailable(control.value);\r\n    \r\n            if (!available.available) return null;\r\n            \r\n            return available.available.email_address ? null : {emailAvailable: true };\r\n        }\r\n    }\r\n\r\n    static usernameAvailable(api: ApiService): AsyncValidatorFn {\r\n        return async (control: AbstractControl): Promise<{[key: string]: boolean} | null> => {\r\n            let available = await api.usernameAvailable(control.value);\r\n    \r\n            if (!available.available) return null;\r\n            \r\n            return available.available.username ? null : {usernameAvailable: true };\r\n        }\r\n    }\r\n}","export class AuthorizationModel {\r\n    token: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nimport { AuthorizationModel } from '../models/AuthorizationModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private authorization: AuthorizationModel;\r\n\r\n  constructor(private jwtHelper: JwtHelperService) { }\r\n\r\n  public getAuthentication():AuthorizationModel {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (token) {\r\n      let authorization:AuthorizationModel = {\r\n        token: localStorage.getItem('token') as string\r\n      }\r\n  \r\n      this.authorization = authorization;\r\n    }\r\n\r\n    return this.authorization;\r\n  }\r\n\r\n  public setAuthentication(authorization: AuthorizationModel) {\r\n    this.authorization = authorization;\r\n    localStorage.setItem('token', authorization.token);\r\n  }\r\n\r\n  public clearAuthentication() {\r\n    this.authorization = new AuthorizationModel();\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  public isAuthenticated():Boolean {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (token) {\r\n      let authorization:AuthorizationModel = {\r\n        token: localStorage.getItem('token') as string\r\n      }\r\n  \r\n      this.authorization = authorization;\r\n\r\n      return !this.jwtHelper.isTokenExpired(token);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\r\nimport { faExpand } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit {\r\n  @ViewChild('display') display: ElementRef<HTMLInputElement>;\r\n  faExpand = faExpand;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadScript('../assets/game.js');\r\n  }\r\n\r\n  private loadScript(url: string) {\r\n    const body = <HTMLDivElement> document.body;\r\n    const script = document.createElement('script');\r\n\r\n    script.innerHTML = '';\r\n    script.src = url;\r\n    script.async = false;\r\n    script.defer = true;\r\n\r\n    body.appendChild(script);\r\n  }\r\n\r\n  onClickFullscreen() {\r\n    this.display.nativeElement.requestFullscreen();\r\n  }\r\n\r\n}\r\n","<app-dropmenu></app-dropmenu>\r\n<section>\r\n    <canvas #display>\r\n        Your browser does not support the HTML canvas tag.\r\n    </canvas>\r\n    <button (click)=\"onClickFullscreen()\"><fa-icon [icon]=\"faExpand\"></fa-icon>Fullscreen</button>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GuardService } from './services/guard.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { GameComponent } from './components/game/game.component';\r\nimport { AccountComponent } from './components/account/account.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'game', component: GameComponent, canActivate: [GuardService] },\r\n  { path: 'account', component: AccountComponent, canActivate: [GuardService] },\r\n\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    onSameUrlNavigation: 'reload',\r\n    useHash: true\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}